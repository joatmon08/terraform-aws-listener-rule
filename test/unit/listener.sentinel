import "tfplan/v2" as tfplan

resources = values(tfplan.planned_values.resources)
services = values(tfplan.variables.services.value)

consul_terraform_sync_service_node_addresses = []
for services as service {
	append(consul_terraform_sync_service_node_addresses, service.node_address)
}

aws_lb_target_group_attachments = filter resources as _, v { v.type is "aws_lb_target_group_attachment" }

aws_lb_target_group_attachment_does_not_use_node_address = rule {
	all aws_lb_target_group_attachments as target_group_attachment {
		target_group_attachment.values.target_id not in consul_terraform_sync_service_node_addresses
	}
}

aws_lb_target_group_attachment_has_ip_address = rule {
	all aws_lb_target_group_attachments as target_group_attachment {
		target_group_attachment.values.target_id matches "^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$"
	}
}

main = rule {
	aws_lb_target_group_attachment_does_not_use_node_address and
	aws_lb_target_group_attachment_has_ip_address
}